<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Style x:Key="TabBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource AlphaBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource H2}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource H2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource F3}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource F3}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SaveBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#C1272C"/>
        <Setter Property="BorderBrush" Value="#C1272C"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#A12126"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseButton" TargetType="{x:Type ButtonBase}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource H3}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabButton" TargetType="{x:Type ButtonBase}" BasedOn="{x:Null}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource AlphaBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource TabBorderStyle}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageButton" TargetType="{x:Type ButtonBase}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Setting-->
    <Style x:Key="SettingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Image Source="{DynamicResource Setting}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Information-->
    <Style x:Key="InformationButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Image Source="{DynamicResource Information}"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Paste-->
    <Style x:Key="PasteButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Height="18">
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Image Source="{DynamicResource Paste}"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Foreground" Value="{DynamicResource F3}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="100" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="14" Style="{DynamicResource BaseBorderStyle}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="14" Style="{StaticResource SaveBorderStyle}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource F3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PreviousPageBtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathLeftArrow}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Resizing-->

    <Style x:Key="ResizingHorizontalLine" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{StaticResource AlphaBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="X2" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="StrokeDashArray" Value="4 6"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>

    <Style x:Key="ResizingHorizontalBtn" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border Background="{StaticResource AlphaBrush}" Height="10" Margin="15,-4,25,0">
                        <Line x:Name="line" Style="{StaticResource ResizingHorizontalLine}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="line" Property="Stroke" Value="{DynamicResource F3}"/>
                            <Setter Property="Cursor" Value="SizeNS" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizingVerticalLine" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{StaticResource AlphaBrush}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Y2" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="StrokeDashArray" Value="4 6"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>

    <Style x:Key="ResizingVerticalBtn" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border Background="{StaticResource AlphaBrush}" Width="10" Margin="0,10,0,10">
                        <Line x:Name="line" Style="{StaticResource ResizingVerticalLine}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="line" Property="Stroke" Value="{DynamicResource F3}"/>
                            <Setter Property="Cursor" Value="SizeWE" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextPageBtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource PreviousPageBtnStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathRightArrow}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Btn Cancel-->
    <Style x:Key="CancelButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathCancel}" Margin="3"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Btn Clear-->
    <Style x:Key="ClearButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathClear}" Margin="3"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Btn Minimized-->
    <Style x:Key="MinimizedButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathMinimized}"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Btn Reload-->
    <Style x:Key="ReloadButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Grid Background="{StaticResource AlphaBrush}">
                            <Path Style="{DynamicResource PathReload1}"/>
                            <Path Style="{DynamicResource PathReload2}"/>
                            <Path Style="{DynamicResource PathFrame}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>